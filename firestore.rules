rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write only their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Albums can be read by any authenticated user OR the server (Cloud Functions)
    match /albums/{albumId} {
      allow read: if request.auth != null || request.time != null;
      allow write: if request.auth != null;
    }

    // üîß Photo access rules:
    // - Anyone can read
    // - Users with 'uploader' claim can upload new photos and update metadata (like setting featured)
    // - No one can delete photos directly from the frontend
    match /photos/{photoId} {
      // Allow anyone to read photos (public view or authenticated)
      allow read: if true;

      // ‚úÖ Allow users with the 'uploader' claim to create and update photos
      allow create: if request.auth.token.uploader == true;
      allow update: if request.auth.token.uploader == true;

      // ‚ùå Deleting photos not allowed through frontend
      allow delete: if false;
    }



    // Featured content can be read by anyone (public)
    match /featured/{docId} {
      allow read: if true;
    }
  }
}
